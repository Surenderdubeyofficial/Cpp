#include<iostream>
using namespace std;

int firstOcc(int arr[], int n, int key) {
    int s = 0, e = n - 1;
    int ans = -1;

    while (s <= e) {
        int mid = s + (e - s) / 2;
        
        if (arr[mid] == key) {
            ans = mid;
            e = mid - 1; // Move to the left subarray to find the first occurrence.
        } else if (key < arr[mid]) {
            e = mid - 1;
        } else {
            s = mid + 1;
        }
    }
    
    return ans;
}

int lastOcc(int arr[], int n, int key) {
    int s = 0, e = n - 1;
    int ans = -1;
    
    while (s <= e) {
        int mid = s + (e - s) / 2;
        
        if (arr[mid] == key) {
            ans = mid;
            s = mid + 1; // Move to the right subarray to find the last occurrence.
        } else if (key < arr[mid]) {
            e = mid - 1;
        } else {
            s = mid + 1;
        }
    }
    
    return ans;
}

int main() {
    int even[11] = {1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 5};
    int key = 3;
    
    int first = firstOcc(even, 11, key);
    int last = lastOcc(even, 11, key);

    if (first != -1 && last != -1) {
        cout << "First occurrence of " << key << " is at index " << first << endl;
        cout << "Last occurrence of " << key << " is at index " << last << endl;
    } else {
        cout << "Element not found in the array." << endl;
    }
    
    
}
